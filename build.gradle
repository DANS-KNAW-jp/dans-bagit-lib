plugins {
  id 'java'
  id 'jacoco'
  id 'findbugs'
  id 'pmd'
  id "com.github.kt3k.coveralls" version "2.5.0"
}
apply from: 'eclipse.gradle'
apply from: 'maven-central.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

if(project.version == "unspecified"){
  project.version = "5.0-SNAPSHOT"
}

repositories {
  jcenter()
}

sourceSets {
  integrationTest {
      java {
          compileClasspath += main.output + test.output
          runtimeClasspath += main.output + test.output
          srcDir file('src/integration/java')
      }
//        resources.srcDir file('src/integration/resources')
  }
}

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
  compile 'org.slf4j:slf4j-api:latest.integration'
    
  testCompile 'junit:junit:latest.integration', 
    'org.springframework.boot:spring-boot-starter-logging:latest.integration',
    'org.bouncycastle:bcprov-jdk15on:latest.integration'
}

test { //show test output
  testLogging.showStandardStreams = true
}

jacoco {
  toolVersion = "0.7.5.201505241946" //needed for jenkins to report code coverage correctly
}

task integrationTest(type: Test) {
  description "Runs the integration tests."
  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath
  testLogging.showStandardStreams = true
}

test.dependsOn integrationTest
jacocoTestReport.dependsOn integrationTest
build.dependsOn jacocoTestReport

jacocoTestReport.dependsOn test
check.dependsOn jacocoTestReport

findbugsTest.enabled = false

findbugs {
  ignoreFailures = true //don't fail the gradle build if bugs are found
}

pmdTest.enabled = false

pmd {
  ruleSets = ["java-basic", "java-braces", "java-empty"]
}

//Keep this for easy viewing of html findbugs report
//tasks.withType(FindBugs) {
//  reports {
//      xml.enabled = false
//      html.enabled = true
//  }
//}
